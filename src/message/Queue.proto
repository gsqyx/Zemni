syntax = "proto3";

package Zemni_protobuf;

enum Type {
    NONE = 0;
    NODE_REGISTER = 1;
    NODE_REGISTER_REPLY = 2;
    //    QUEUE_REGISTER = 3;
    QUEUE_REQUEST = 3;
    //    QUEUE_REQUEST_REPLY = 4;
    QUEUE_RELEASE_REQUEST = 5;
    //    QUEUE_UNREGISTER = 4;
    //    QUEUE_RELEASE_REQUEST = 5;
    //    DATASTREAM_CONNECT_REQUEST = 6;

    DATASTREAM_PRODUCER_RESET = 7;

    DATASTREAM_CONSUMER_CONNECT = 8;
    //    DATASTREAM_DISCONNECT_REQUEST = 7;
}

message NodeRegister {
    string host = 1;
}

message NodeRegisterReply {
    int32 id = 1;
    //    int32 actor_port = 2;
    int32 actor_port = 2;
    int32 zmq_port = 3;
}

message QueueRequest {
    int32 node_id = 1;
    int32 queue_id = 2;
    bool as_consumer = 3;
}

//message QueueRequestReply {
//    bool approve = 1;
//}

//message QueueUnregister {
//    int32 node_id = 1;
//    int32 queue_id = 2;
//}

message QueueReleaseRequest {
    //    int32 node_id = 1;
    int32 queue_id = 1;
    bool as_consumer = 2;
    bool delete = 3;
}

//message DataStreamConnectRequest {
//    int32 queue_id = 1;
//    string dst_host = 2;
//    int32 dst_port = 3;
//    bool as_consumer = 4;
//    int32 dst_host_id = 5;
//}

message DataStreamProducerReset {
    int32 queue_id = 1;
    //    string dst_host = 2;
    int32 dst_port = 3;
    int32 dst_host_id = 4;
}

message DataStreamConsumerConnect {
    //    int32 queue_id = 1;
    string dst_host = 1;
    int32 dst_host_id = 2;
    //    int32 dst_port = 3;
    //    int32 dst_host_id = 4;
}
