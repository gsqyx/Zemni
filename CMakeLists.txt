CMAKE_MINIMUM_REQUIRED(VERSION 3.6)
SET(PROG Zemni)
PROJECT(${PROG} C CXX)

SET(CMAKE_CXX_STANDARD 14)
SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_PREFIX_PATH ${PROJECT_SOURCE_DIR}/CMakeModules)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -ldl")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -ldl")
SET(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
SET(CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
set(CMAKE_CXX_STANDARD 14)

SET(OPENSSL_ROOT_DIR "/usr/local/opt/openssl/")
FIND_PACKAGE(OpenSSL REQUIRED)
FIND_PACKAGE(GLog REQUIRED)
FIND_PACKAGE(Folly REQUIRED)
FIND_PACKAGE(CAF REQUIRED core io)
FIND_PACKAGE(Protobuf REQUIRED)
FIND_PACKAGE(ZeroMQ REQUIRED)
FIND_PACKAGE(SNAPPY REQUIRED)
#FIND_PACKAGE(GFlags REQUIRED)
#FIND_PACKAGE(Boost REQUIRED COMPONENTS system thread iostreams filesystem)

INCLUDE_DIRECTORIES(${OPENSSL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${GLOG_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${FOLLY_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CAF_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${Protobuf_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${ZeroMQ_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SNAPPY_INCLUDE_DIRS})
#INCLUDE_DIRECTORIES(${GFLAGS_INCLUDE_DIR})
#INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

add_subdirectory(src)
add_subdirectory(test)
